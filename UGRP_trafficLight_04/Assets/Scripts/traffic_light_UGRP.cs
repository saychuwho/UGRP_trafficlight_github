using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class traffic_light_UGRP : MonoBehaviour
{
    // 현재 신호등이 어떤 type을 가지는가를 나타내는 변수
    public int trafficLightType = 0;

    // code idea's from "Animating Traffic lights / Street Lamps / Signs" by Kobra Game Studios
    // 여기에는 반드시 신호등 불 순서대로 집어넣어야 한다.
    public GameObject[] lights;

    // 기존 코드에서 시간 관련된 거를 뺐다.
    // 어떤 불이 들어와야 하는지가 아니라, 신호 체계에서 어떤 상태를 가지고 있어야 하는지를 나타내는 index이다.
    public int startingLightIndex = 0;

    // 현재 켜져있는 불이 여러개가 있을 수 있으니 이를 List로 관리
    List<int> m_iCurrentLightIndex = new List<int>();

    // 어떤 불이 어떤 순서대로 들어와야 하는지를 지정하는 List
    // 이거는 controller의 Start에서 지정해야 할지도...
    public List<int[]> lightStates = new List<int[]>();

    // 상태들이 어떤 길이 만큼 불이 들어올지를 결정
    public List<float> lightDuration;

    // 현재 어떤 상태로 불이 들어와야 하는지를 나타내는 변수
    public int currentLightStateIndex = 0;

    // 현재 상태가 얼마나 지속되어야 하는가를 나타내는 변수
    public float currentLightStateDuration;


    // Start is called before the first frame update
    void Start()
    {
        
        ResetLight();
    }

    void ResetLight()
    {
        foreach (GameObject light in lights)
        {
            m_iCurrentLightIndex.Add(0);
            light.SetActive(false);
        }
    }

    // 현재 신호등의 상태를 List로 반환하는 함수
    public List<int> ReturnCurrentLight()
    {
        return m_iCurrentLightIndex;
    }

    // lightIndex에 해당하는 light를 키고, lightIndex를 m_iCurrentLightIndex에 넣는다.
    // 한꺼번에 여러개의 불이 들어올 수 있다
    public void LightOn(int lightIndex)
    {
        lights[lightIndex].SetActive(true);
        m_iCurrentLightIndex[lightIndex] = 1;
    }

    // lightIndex에 해당하는 light를 끄고, lightIndex를 m_iCurrentLightIndex에서 제거한다.
    // 한꺼번에 여러개의 불이 들어올 수 있으니 이 함수를 만들어둠
    public void LightOff(int lightIndex)
    {
        lights[lightIndex].SetActive(false);
        m_iCurrentLightIndex[lightIndex] = 0;
    }

    // Update는 TrafficLightController.cs에서 이루어질 예정이다.
    // Update is called once per frame
    void Update()
    {
        
    }
}
